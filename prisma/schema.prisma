generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model Yukimito {
  id     String @id @unique @default(uuid())
  serial Int    @unique @default(autoincrement())

  total_pets_checked_in Int @default(0)
}

model User {
  id     String @id @unique @default(uuid())
  serial Int    @unique @default(autoincrement())

  email String @unique

  name    String @default("")
  phone   String @default("")
  address String @default("")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  bookings Booking[]
  pets     Pet[]
}

model Pet {
  id     String @id @unique @default(uuid())
  serial Int    @unique @default(autoincrement())

  name          String
  breed         String
  birth_date    String
  size          String
  vaccine_photo String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User      User     @relation(fields: [userId], references: [id])
  userId    String
  Booking   Booking? @relation(fields: [bookingId], references: [id])
  bookingId String?
}

model Booking {
  id     String @id @unique @default(uuid())
  serial Int    @unique @default(autoincrement())

  pet_owner_name String
  service        String
  address        String
  phone_number   String
  email          String
  total_bill     Int

  check_in_date  String
  check_out_date String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user_id String
  user    User   @relation(fields: [user_id], references: [id])

  pets         Pet[]
  raw_pet_data Json[]
}

model InstantBooking {
  id     String @id @unique @default(uuid())
  serial Int    @unique @default(autoincrement())

  pet_owner_name String
  service        String
  address        String
  phone_number   String
  email          String

  check_in_date  String
  check_out_date String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  raw_pet_data Json[]
}
